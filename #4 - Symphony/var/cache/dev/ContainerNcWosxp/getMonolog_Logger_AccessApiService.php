<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'monolog.logger.access_api' shared service.

include_once $this->targetDirs[3].'/vendor/monolog/monolog/src/Monolog/Handler/RotatingFileHandler.php';

$this->services['monolog.logger.access_api'] = $instance = new \Symfony\Bridge\Monolog\Logger('access_api');

$a = new \Monolog\Handler\RotatingFileHandler(($this->targetDirs[2].'/log/access_api.log'), 0, 100, true, NULL);
$a->pushProcessor(($this->privates['monolog.processor.psr_log_message'] ?? $this->privates['monolog.processor.psr_log_message'] = new \Monolog\Processor\PsrLogMessageProcessor()));
$a->setFilenameFormat('{filename}-{date}', 'Y-m-d');

$instance->pushHandler(($this->privates['monolog.handler.console'] ?? $this->privates['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, array())));
$instance->pushHandler(($this->privates['monolog.handler.main'] ?? $this->getMonolog_Handler_MainService()));
$instance->pushHandler($a);

return $instance;
